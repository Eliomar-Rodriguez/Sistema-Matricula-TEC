/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolog;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jpl7.Query;


public class Vista1 extends javax.swing.JFrame {

    
    public static ArrayList<Curso> listaCursos = new ArrayList<Curso>();
    public static ArrayList<Curso> listaTemp = new ArrayList<>();
    public int rowPub;
    public static ArrayList<Curso> listaMaterias2;
    public Vista1() {
        initComponents();
        listaMaterias2 = new ArrayList<Curso>();
        cargarCursos(realizaConexion());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCrearHorario = new javax.swing.JButton();
        cmbSemestre = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${autoResizeMode}"), jTable1, org.jdesktop.beansbinding.BeanProperty.create("autoResizeMode"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        jButton1.setText("Cargar Cursos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(">>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("<<<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Remover");

        jLabel2.setText("Agregar");

        btnCrearHorario.setText("Crear Horario");
        btnCrearHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearHorarioActionPerformed(evt);
            }
        });

        cmbSemestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semestre 1", "Semestre 2" }));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Cursos Seleccionados");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Cursos Disponibles");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(133, 133, 133))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCrearHorario)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel1)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cmbSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addGap(91, 91, 91)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCrearHorario)
                .addGap(18, 18, 18))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         listaTemp.clear();
        for(int x = 0; x < listaCursos.size(); x++){
            if (cmbSemestre.getSelectedIndex() == 0){
                if(listaCursos.get(x).getSemestre()%2 == 1){
                    listaTemp.add(listaCursos.get(x));
                }
            }
            else{
                if(listaCursos.get(x).getSemestre()%2 == 0){
                    listaTemp.add(listaCursos.get(x));
                }
            }
        }
        
        actualizaTabla(listaTemp, jTable1);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public static Connection realizaConexion(){
        try {
            String connectionUrl = "jdbc:sqlserver://;"
                    + "database=PrologLenguajes;"
                    + "integratedSecurity=true;";
            Connection conect = DriverManager.getConnection(connectionUrl);
            //ejecutarConsulta(conect);
            return conect;
            //System.out.println("Conectado.");
        } 
        catch (SQLException ex) 
        {
            System.out.println("Error.");
        }
        return null;
    }
    
    public static void cargarCursos(Connection con) {
        try {
            String SQL = "SELECT * FROM Cursos;";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(SQL);

            while (rs.next()) {
                /// se crea un cruso con los datos obtenidos de la consulta a la base de datos
                Curso c = new Curso();                
                c.setNombre(rs.getString("Nombre").toString());
                
                c.setTipo(rs.getString("Tipo").toString());
                c.setCreditos(Integer.parseInt(rs.getString("Creditos").toString()));
                c.setSemestre(Integer.parseInt(rs.getString("Semestre").toString()));
                
                listaCursos.add(c);
                
                ///Profesor p = new Profesor(rs.getString("Carnet"), rs.getString("Nombre"));
                //listaProfesores.add(p);
                //System.out.println(listaProfesores.size());
            }
            System.out.println("len cursos: "+listaCursos.size());

            rs.close();
            stmt.close();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
        ArrayList<Curso> lista = (ArrayList<Curso>) listaCursos.clone();
        int fils = tableModel.getRowCount();
        int i = 0;
        while(i<fils) {
                if((boolean)tableModel.getValueAt(i,0)==true){
                    System.out.println(listaCursos.get(i));
                    listaMaterias2.add(listaCursos.get(i));
                    lista.remove(i);
                    tableModel.removeRow(i);
                    fils = tableModel.getRowCount();
                }
                else{
                    i++;
                    fils = tableModel.getRowCount();
                }
        }
        actualizaTabla(listaCursos,jTable1);
        actualizaTabla(listaMaterias2,jTable2);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel)jTable2.getModel();
        int fils = tableModel.getRowCount();
        int i = 0;
        while(i<fils) {
                if((boolean)tableModel.getValueAt(i,0)==true){
                    //listaCursos.add((Curso) tableModel.getValueAt(i,1));
                    listaMaterias2.remove(i);
                    tableModel.removeRow(i);
                    fils = tableModel.getRowCount();
                }
                else{
                    i++;
                    fils = tableModel.getRowCount();
                }
                
        }
        actualizaTabla(listaCursos,jTable1);
        actualizaTabla(listaMaterias2,jTable2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnCrearHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearHorarioActionPerformed
        try {
            String conexion = "consult('proyectoMain.pl')";
            Query con = new Query(conexion);
            System.out.println(conexion + " " + (con.hasMoreSolutions()?"ACEPTADO":"FALLADO"));
            
            System.out.println("Iniciando la consulta");
            String consulta = "creaHorario([lenguajes]).";
            /*for(int i = 0; i < listaMaterias2.size();i++){
                consulta += listaMaterias2.get(i).getNombre();
                consulta += ",";
            }
            consulta = consulta.substring(0,consulta.length()-1);
            consulta += "]).";*/
            //String consulta = "horario(Horario).";
            
            //String conexion = "consult('proyectoMain.pl')";
            Query conn = new Query(conexion);
            System.out.println(conexion + " " + (conn.hasMoreSolutions()?"ACEPTADO":"FALLADO"));
            
            
            Query ejecutar = new Query(consulta);
            ejecutar.oneSolution();
            String consulta2 = "horario(H).";
            Query ejecutar2 = new Query(consulta2);
            if(ejecutar.hasSolution()){
                System.out.println(ejecutar2.oneSolution().get("H").toString());
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());            
        }
    }//GEN-LAST:event_btnCrearHorarioActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista1().setVisible(true);
                
            }
        });
    }
    
    public void actualizaTabla(ArrayList<Curso> listaMaterias,JTable Tabla){
        if (listaMaterias != null && !listaMaterias.isEmpty()){
            DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
            int cFilas = modelo.getRowCount();
            int cont = 0;
            while(cont != cFilas){
                modelo.removeRow(0); 
                cont+=1;
            }
            System.out.println("2");
            Object[] fila = new Object[modelo.getColumnCount()];
            for(int i = 0; i < listaMaterias.size();i++){
                    fila[0] = false;
                    //fila[1] = listaMaterias.get(i).getCodigo().toString();
                    fila[1] = listaMaterias.get(i).getNombre();
                modelo.addRow(fila);
            }
        }
           
    }                              
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearHorario;
    private javax.swing.JComboBox<String> cmbSemestre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
